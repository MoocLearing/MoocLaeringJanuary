@using Mooc.Data.Entities;
@model Mooc.Data.ViewModels.CourseView
@{
    ViewBag.Title = "添加课程";
}

<div class="row">

    <div class="panel panel-default col-md-6 col-md-push-3">
        <div class="panel-heading">
            <h3 class="panel-title">添加课程</h3>
        </div>

        <div class="form-horizontal" style="margin-top:20px;">
            <div class="form-group">
                @Html.LabelFor(m => m.CourseName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(p => p.CourseName, new { htmlAttributes = new { @class = "form-control" } })


                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TeacherId, "教师名", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.DropDownList("TeacherId", null, htmlAttributes: new { @class = "form-control", id = "teacherid" })*@
                    @*@Html.DropDownListFor(m => m.TeacherId, ViewBag.TeacherList as IEnumerable<SelectListItem>, "--请选择--", new { @class = "form-control",@id="TeacherId" })*@
                    @Html.DropDownListFor(m => m.TeacherId, ViewBag.TeacherList as IEnumerable<SelectListItem>, "--请选择--", new { @class = "form-control col-md-10", @id = "TeacherId" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CategoryId, "课程类型", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.CategoryId, ViewBag.CategoryList as IEnumerable<SelectListItem>, "--请选择--", new { @class = "form-control col-md-10", @id = "CategoryId" })

                </div>
            </div>

            @*<div class="form-group">
            @Html.LabelFor(m => m.CoverPic, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                base64上传文件的关键
                <input type="file" onchange="uploadFile(this)" class="form-control" accept="image/*" />
                <input type="hidden" value="" id="fileName" />
            </div>
        </div>*@
            <div class="form-group">
                @Html.LabelFor(m => m.CourseDetail, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(p => p.CourseDetail, new { @class = "form-control", @id = "CourseDetail" })

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.CoverPic, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <a id="uploadimg" class="btn btn-primary">上传用户照片</a>
                    <input type="hidden" value="" id="fileName" />
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2"></label>
                <div class="col-md-10" id="dataBind"></div>
            </div>




            <div class="form-group" style="padding-top: 20px;">
                <div class="col-md-offset-2 col-md-10">
                    <input type="button" value="提交" onclick="submit()" class="btn btn-success btn-submit" />
                    <input type="button" value="返回" onclick="back()" class="btn btn-danger btn-margin" />
                </div>
            </div>
        </div>

    </div>

</div>

<script src="~/Scripts/plupload/plupload.full.min.js"></script>
<script>
    function initUpload() {

        var uploader_file = new plupload.Uploader({//创建实例的构造方法
            runtimes: 'gears,html5,html4,flash', //上传插件初始化选用那种方式的优先级顺序
            browse_button: "uploadimg", // 上传按钮
            url: "@Url.Content("~/Admin/Course/UploadImg")", //远程上传地址
            @*flash_swf_url: "@Url.Content("~/Scripts/plupload/Moxie.swf")",*@
            filters: {
                max_file_size: '50mb', //最大上传文件大小（格式100b, 10kb, 10mb, 1gb）
                mime_types: [//允许文件上传类型
                    { title: "图片文件", extensions: "jpg,jpeg,gif,png" }//"mp4,flv,rmvb,mpeg,mov,wmv"
                ]
            },
            multipart_params: {  'type': '1' },//往后台传参数
            multi_selection: false, //true:ctrl多文件上传, false 单文件上传
            init: {
                FilesAdded: function (up, files) { //文件上传前

                    uploader_file.start();

                },

                UploadProgress: function (up, file) { //上传中，显示进度条

                },
                FileUploaded: function (up, file, info) { //文件上传成功的时候触发
                    var data = eval("(" + info.response + ")");//解析返回的json数据
                    if (data && data.code == 0) {
                        $("#fileName").val(data.fileName);
                        alert("上传成功");
                        var _html = "";
                        var imageUrl = "@Url.Content("~/Admin/Course/Show?filename=")" + data.fileName;
                        _html += "<img src='" + imageUrl + "' width='100' onerror=\"javascript: this.src = '@Url.Content("~/Images/logoError.png")'\"  >";
                        $("#dataBind").html(_html);
                    }
                    else {
                        //这两个alert拼写错了，所以一直没跑起来
                        alert(data.msg);
                    }
                },
                UploadComplete: function (uploader, files) {
                    console.log("UploadComplete", files);

                },
                Error: function (up, err) { //上传出错的时候触发
                    $("#upload-program").hide();
                    var errorCode = err.code;
                    switch (errorCode) {
                        case -600:
                            alert("抱歉，上传失败！您所上传的视频超过50mb！");
                            break;
                        case -601:
                            alert("请上传 jpg、jpeg、gif、png 格式文件！");
                            break;
                        case -602:
                            alert("文件选择重复! ");
                            break;
                        case -200:
                            alert("发生http网络错误! ");
                            break;
                        case -400:
                            alert("发生安全问题而产生的错误! ");
                            break;
                        default:
                            alert("上传失败! ");
                            break;
                    }
                }
            }
        });
        uploader_file.init();
    }
    initUpload();

</script>

<script>
    var uploadFile = function (obj) {

        var files = obj.files;
        if (files.length > 0) {
            var file = files[0];
            //判断类型是不是图片
            if (!/image\/\w+/.test(file.type)) {
                alert("请上传jpg、jpeg、gif、png格式的图片！");
                return false;
            }
            if (window.FileReader) {
                debugger;
                var fr = new FileReader();
                fr.onloadend = function (e) {
                    var base64 = e.target.result;
                    console.log("此张图片base64=" + base64)
                    //上传
                    ajaxUpLoad(base64);
                };
                fr.readAsDataURL(file);
            }
        } else {
            alert("请选择图片")
        }
    }
    function back() {
        window.location.href = "@Url.Content("~/Admin/Course/List")";
    }

    function ajaxUpLoad(base64) {

         $.ajax({
            url: "@Url.Content("~/Admin/Course/SaveBase64")",
             data: { "base64": base64},
            type: "POST",
            dataType: 'json',
            success: function(data) {
                if (data.code == 0) {
                    $("#fileName").val(data.fileName)
                    alert("上传成功")
                } else {
                    alert(data.msg)
                    return false;
                }
            }
        })


    }
</script>
<script>

    function submit() {

        var coursename = $.trim($("#CourseName").val());
        if (coursename == "") {
            alert("课程名称不能为空")
            return;
        }

        var coursedetail = $.trim($("#CourseDetail").val());
        if (coursedetail == "") {
            alert("课程描述不能为空")
            return;
        }

        var teacherid = $("#TeacherId").val();
        if (!teacherid) {
            alert("请选择课程讲师")
            return;
        }

        var categoryid = $("#CategoryId").val();
        if (!categoryid) {
        alert("请选择课程类别")
        return;
        }

       var fileName= $("#fileName").val()
        if (!fileName) {
            alert("请上传课程封面")
            return;
        }
       // var status = $.trim($("#status").val());

        $.ajax({
            url: "@Url.Content("~/Admin/Course/Save")",
            data: { "CourseName": coursename, "CourseDetail": coursedetail, "TeacherId": teacherid, "CategoryId": categoryid, "CoverPic": fileName},
            type: "POST",
            dataType: 'json',
            success: function(data) {
                if (data.code == 0) {
                    window.location = "@Url.Content("~/Admin/Course/List")";
                } else {
                    alert(data.msg)
                    return false;
                }
            }
        })

    }
</script>

